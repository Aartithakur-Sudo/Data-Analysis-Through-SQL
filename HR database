



/****practice session****/

show databases;
use HR;

/*** Write a query to display the names (first_name, last_name) using alias name “First Name", "Last 
Name"***/
SELECT first_name as first_Name,  last_name as Last_Name
FROM employees;
/***Write a query to get unique department ID from employee table/***/

SELECT DISTINCT employee_id
FROM employees;

/*Write a query to get all employee details from the employee table order by first name, 
descending**/

SELECT *
FROM employees
order by first_name
desc;
/* Write a query to get the names (first_name, last_name), 
salary, PF of all the employees (PF is 
calculated as 15% of salary)
*/

#3
SELECT first_name, last_name, salary, salary*.15 pf
from employees;






/** . Write a query to get the employee ID, names (first_name, last_name), 
salary in ascending order of 
salary
**/
use HR;
SELECT employee_id, concat(first_name,' ' , Last_name) as name, salary
FROM employees
ORDER BY salary;

/** . Write a query to get the total salaries payable to employee*/


SELECT SUM(SALARY) AS total_salary
FROM employees;


/*** Write a query to get the maximum and minimum salary from employees tabl**/

SELECT Max(salary) as Max_salary , Min(salary) as Min_salary
from employees;


/***Write a query to get the average salary and number of employees in the employees table**/
SELECT count(employee_id) as no_of_emp, avg(salary)
FROM employees;

/** . Write a query to get the number of employees working with the company*/

SELECT COUNT(employee_id)
from employees;

 /**Write a query to get the number of jobs available in the employees table**/
select count(distinct(job_id)) as jobs
from employees;
select * from employees;

/**Write a query get all first name from employees table in upper case**/

SELECT upper(first_name)
FROM employees

/**
 Write a query to get the first 3 characters of first name from employees table*/
# SUBSTRING(first_name,1,3) 
FROM employees;

 
 
/*Write a query to get first name from employees table after removing white spaces from both side*/

SELECT trim(first_name) as name 
from employees;
 
 /**Write a query to get the length of the employee names (first_name, last_name) from employees table**/
 use hr;
 
 SELECT length(first_name) as f_name, length(last_name) as l_name
 from employees;
 
 /***Write a query to check if the first_name 
 fields of the employees table contains number
 **/
 
 select first_name
 from employees
 where first_name REGEXP'(0-9)';
 
/***Write a query to display the name (first_name, last_name) and salary for all employees whose salary is 
not in the range $10,000 through $15,000**/ 
 
 SELECT concat(first_name,last_name) as name ,salary
 FROM employees
 WHERE salary not between 10000 and 15000
 order by salary;
 
 
 /*** Write a query to display the name (first_name, last_name) and department ID of all employees in 
departments 30 or 100 in ascending order
 **/

SELECT concat(first_name, ' ',last_name),department_id
FROM employees
WHERE department_id IN(30,100)
order by department_id;

/*Write a query to display the name (first_name, last_name) and salary for all employees whose salary is 
not in the range $10,000 through $15,000 and are in department 30 or 100***/

SELECT concat(first_name, ' ',last_name),department_id, salary
FROM employees
WHERE department_id not BETWEEN 10000 AND 15000 AND department_id IN(30,100)
order by department_id;





/**** . Write a query to display the name (first_name, last_name) and hire date for all employees who were 
hired in 1987***/


select * from employees;
SELECT concat(first_name, ' ',last_name) as name, hire_date
FROM employees
WHERE year(hire_date) like '1987%';


/****Write a query to display the first_name of all employees 
who have both "b" and "c" in their first name***/
SELECT first_name
FROM employees
where first_name like '%b%' and first_name like '%c%';


/**Write a query to display the last name, job, and salary for all employees whose job is that of a 
Programmer or a Shipping Clerk, and whose salary is not equal to $4,500, $10,000, or $15,000
**/

SELECT last_name, job_id, salary
FROM employees
WHERE job_id like 'IT_prog' or job_id like 'sh_clerk' and salary not IN('4500','10000','15000')
order by Job_id;



/**** Write a query to display the last name of employees whose names have exactly 6 characters
**/

SELECT last_name
FROM employees
where last_name like '______';


/**** . Write a query to display the last name of employees having 'e' as the third character
**/

select last_name
from employees
where last_name like '%e';

 /**Write a query to get the job_id and related employee's id
**/

#2
select job_id, group_concat(employee_id,'') employeeID
from employees
group by job_id;








/***Write a query to update the portion of the phone_number in the employees table, 
within the phone 
number the substring '124' will be replaced by '999
***/
use HR;

UPDATE employees
SET Phone_number = replace('phone_number','124','999')
WHERE PHONE_NUMBER LIKE'%124%';

SELECT * FROM EMPLOYEES;



/**** 27. WRITE A QUERY TO APPEND '@EXAMPLE.COM' TO EMAIL FIELD***/

UPDATE employees
SET email = concat(email,'@example.com');



/****WRITE A QUERY TO EXTRACT THE LAST 4 CHARACTER OF PHONE NUMBERS****/

SELECT RIGHT(PHONE_NUMBER,4) FROM EMPLOYEES;

SHOW DATABASES;
USE northwind;
/**WRITE A QUERY TO GET MOST EXPENSE AND LEAST EXPENSIVE PRODUCT LIST (NAME AND UNIT 
PRICE)**/

SELECT productname, Max(unitPrice) as most_exp , Min(UnitPrice) as Least_exp
FROM products;
SELECT * 
FROM PRODUCTS 
ORDER BY UNITprice DESC;

/*****. WRITE A QUERY TO GET PRODUCT LIST (ID, NAME, UNIT PRICE) WHERE PRODUCTS COST BETWEEN $15
AND $25
***/


SELECT productID,ProductName, UnitPrice
FROM products
where unitprice between 15 and 25; 

/****WRITE A QUERY TO GET PRODUCT LIST (NAME, UNIT PRICE) OF ABOVE AVERAGE PRICE***/

SELECT productname, UnitPrice 
FROM products
where UnitPrice > (SELECT AVG(UNITPRICE) FROM PRODUCTS)
order by unitprice;


USE hr;
show tables;
show create table departments;

Show databases;
use northwind;
/****. Write a query to get the details of the employees where the length of the first name greater than or 
equal to 8****/

SELECT *
FROM employees
WHERE Length(FirstName)>=8;


/***Write a query to extract the last 4 character of phone numbers****/

SELECT RIGHT(FirstName,4)
FROM employees;

/***WRITE A QUERY TO DISPLAY THE LAST NAME OF EMPLOYEES WHOSE NAMES HAVE EXACTLY 6
CHARACTERS***/

USE hr;
SELECT last_name
FROM employees
where last_name LIKE '______';

/***Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical 
(i.e.: enclosed in parentheses). 
For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S)******/

use skila;
use superstore;

SELECT * from cust_dimen;
/**Write a query to display the Customer_Name and Customer Segment using alias 
name “Customer Name", "Customer Segment" from table Cust_dimen.***/

SELECT Customer_name , Customer_segment 
FROM cust_dimen;

/***write a query to find all the details of the customer from the table cust_dimen 
order by desc.***/
SELECT *
FROM cust_dimen
order by cust_id
desc;

/***Write a query to get the Order ID, Order date from table orders_dimen where 
‘Order Priority’ is high.****/

SELECT Order_ID, Order_date, Order_priority
from orders_dimen
where Order_priority = 'High';

/*** Find the total and the average sales (display total_sales and avg_sales) ***/
SELECT sum(Sales) as Total_sales, Avg(sales) as Avg_sales
FROM market_fact;


/****Write a query to get the maximum and minimum sales from maket_fact table.****/
SELECT max(Sales) as Max_sales, Min(Sales) as Min_sales FROM market_fact;


/****Display the number of customers in each region in decreasing order of 
no_of_customers. The result should contain columns Region, no_of_customers.***/

SELECT Region, count(cust_id)Region
FROM cust_dimen
ORDER BY cust_id 
desc;

/*** Find the region having maximum customers (display the region name and 
max(no_of_customers)
***/
SELECT count(*) as no_of_customers, region
from cust_dimen
group by region
order by count(cust_id)
desc
limit 1;

/***Find all the customers from Atlantic region who have ever purchased ‘TABLES’ 
and the number of tables purchased (display the customer name, no_of_tables 
purchased)***/
select c.Customer_Name, c.region, p.Product_Sub_Category ,sum(m.Order_quantity) as "order Quantity"
from market_fact m
join prod_dimen p
on m.prod_id =p.prod_id
join cust_dimen c
on m.cust_id = c.Cust_id
where p.Product_Sub_Category = "Tables" and c.Region = "ATLANTIC"
GROUP BY c.Customer_Name
order by Order_Quantity
desc;



















